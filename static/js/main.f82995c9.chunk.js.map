{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactsList/ContactsList.module.css","Components/Filter/Filter.module.css","Components/Button/Button.module.css","Components/Button/Button.jsx","Components/ContactForm/ContactForm.jsx","Components/ContactsList/ContactsList.jsx","Components/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","Button","type","buttonName","handleClick","className","s","button","onClick","ContactForm","state","name","number","handleChange","target","value","setState","onSubmit","e","preventDefault","props","handleSubmit","id","uuidv4","reset","this","form","htmlFor","input","onChange","pattern","title","required","Component","ContactsList","contactsList","handleRemove","list","map","item","Filter","label","App","contacts","filter","addContact","contact","sameName","prevState","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","contactName","alert","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f82995c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__11I6o\",\"input\":\"ContactForm_input__3w2yf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__1QLGT\",\"item\":\"ContactsList_item__2FbM_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2P866\",\"input\":\"Filter_input__1bhIE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1P3VE\"};","import PropTypes from \"prop-types\";\r\nimport s from \"./Button.module.css\";\r\nfunction Button({ type, buttonName, handleClick }) {\r\n  return (\r\n    <button className={s.button} onClick={handleClick} type={type}>\r\n      {buttonName}\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  type: PropTypes.array,\r\n  buttonName: PropTypes.array,\r\n  handleClick: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","import { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport s from \"./ContactForm.module.css\";\r\nimport Button from \"../Button/Button\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.handleSubmit({ ...this.state, id: uuidv4() });\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { onSubmit, handleChange } = this;\r\n    return (\r\n      <form className={s.form} onSubmit={onSubmit}>\r\n        <label htmlFor={uuidv4()}>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            onChange={handleChange}\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label htmlFor={uuidv4()}>\r\n          Number\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            onChange={handleChange}\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <Button type=\"submit\" buttonName=\"Add contact\" />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactsList.module.css\";\r\nimport Button from \"../Button/Button\";\r\n\r\nclass ContactsList extends Component {\r\n  render() {\r\n    const { contactsList, handleRemove } = this.props;\r\n    return (\r\n      <ul className={s.list}>\r\n        {contactsList.map(({ id, name, number }) => {\r\n          return (\r\n            <li className={s.item} key={id}>\r\n              <p>\r\n                {name}: {number}{\" \"}\r\n              </p>\r\n              <Button\r\n                type=\"button\"\r\n                handleClick={() => handleRemove(id)}\r\n                buttonName=\"Delete\"\r\n              />\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\nContactsList.propTypes = {\r\n  contactsList: PropTypes.func,\r\n  handleRemove: PropTypes.func,\r\n};\r\n\r\nexport default ContactsList;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction Filter({ onChange }) {\r\n  return (\r\n    <label className={s.label} htmlFor={uuidv4()}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        onChange={onChange}\r\n        name=\"filter\"\r\n        required\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import { Component } from \"react\";\nimport ContactForm from \"./Components/ContactForm/ContactForm\";\nimport ContactsList from \"./Components/ContactsList/ContactsList\";\nimport Filter from \"./Components/Filter/Filter\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = (contact) => {\n    if (this.sameName(contact)) {\n      return;\n    } else {\n      this.setState((prevState) => ({\n        contacts: [contact, ...prevState.contacts],\n      }));\n    }\n  };\n\n  handleRemove = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) => {\n      return contact.name.toLowerCase().includes(normalizedFilter);\n    });\n  };\n\n  sameName = (contactName) => {\n    const { contacts } = this.state;\n    contacts.map((contact) => {\n      if (contact.name === contactName.name) {\n        alert(`${contactName.name} is already in contacts`);\n      }\n      return contact;\n    });\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <div className=\"container\">\n        <h1 className=\"mainTitle\">Phonebook</h1>\n        <ContactForm handleSubmit={this.addContact} />\n        <h2 className=\"contactsTitle\">Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactsList\n          contactsList={visibleContacts}\n          handleRemove={this.handleRemove}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}